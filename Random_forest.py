#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jan 15 09:07:06 2018

@author: leanderheuvel
"""
from sklearn.ensemble import RandomForestClassifier
import numpy as np
import matplotlib.pyplot as plt
import Semeion_data_loader as data



clf = RandomForestClassifier(max_depth=40, n_jobs=-1, random_state=0, n_estimators=250)
clf.fit(data.x_train, data.y_train_ints)

NR_ITERS = 2
accuracies = []
depths = []
all_accs = []
'''
for _ in range (0,NR_ITERS):
    for i in range(1,200,5):
        #print(i)
        clf = RandomForestClassifier(max_depth=None, n_estimators=i, max_features=10, n_jobs=-1) 
        clf.fit(data.x_train, data.y_train_ints)
    
        predicted_ys = clf.predict(data.x_test)
        #print (predicted_ys)
    
        j = 0
        for x in range(0,1393):
            if predicted_ys[x] == data.y_test_ints[x]:
                j+=1
            #print (j/1393)
        accuracies.append(j/1393)
        depths.append(i)
    
       # feature_importances = clf.feature_importances_
        #plt.imshow(np.reshape(feature_importances,(16,16)))
        #plt.show()
    all_accs.append(accuracies)
all_accs = np.array(all_accs)
all_accs = all_accs.T
all_accs.tolist()
avg_accs = []
for i in range(0,80):
    avg_accs.append(sum(all_accs[i])/NR_ITERS)
avg_accs = np.array(avg_accs)
avg_accs = avg_accs.T
avg_accs = avg_accs.tolist()
'''
avgs_temp = [0.8348887293610912, 0.9712849964106246, 0.9791816223977028, 0.9885139985642498, 0.9863603732950467, 0.9870782483847811, 0.9913854989231874, 0.9913854989231874, 0.9928212491026561, 0.9935391241923905, 0.9928212491026561, 0.9928212491026561, 0.9913854989231874, 0.994256999282125, 0.9949748743718593, 0.9935391241923905, 0.9935391241923905, 0.9935391241923905, 0.9949748743718593, 0.9949748743718593, 0.9964106245513281, 0.994256999282125, 0.9928212491026561, 0.9928212491026561, 0.9935391241923905, 0.9928212491026561, 0.994256999282125, 0.9956927494615937, 0.9935391241923905, 0.9949748743718593, 0.9949748743718593, 0.9928212491026561, 0.994256999282125, 0.9935391241923905, 0.9935391241923905, 0.994256999282125, 0.994256999282125, 0.994256999282125, 0.9935391241923905, 0.9935391241923905, 0.832735104091888, 0.9712849964106246, 0.9813352476669059, 0.9842067480258435, 0.9899497487437185, 0.990667623833453, 0.990667623833453, 0.9949748743718593, 0.9921033740129217, 0.994256999282125, 0.9935391241923905, 0.9935391241923905, 0.9928212491026561, 0.9928212491026561, 0.9949748743718593, 0.9928212491026561, 0.994256999282125, 0.9921033740129217, 0.9921033740129217, 0.9949748743718593, 0.9935391241923905, 0.9913854989231874, 0.9935391241923905, 0.994256999282125, 0.994256999282125, 0.9921033740129217, 0.9935391241923905, 0.994256999282125, 0.9928212491026561, 0.9935391241923905, 0.9928212491026561, 0.994256999282125, 0.9949748743718593, 0.9928212491026561, 0.9935391241923905, 0.9935391241923905, 0.9921033740129217, 0.9935391241923905, 0.994256999282125, 0.9949748743718593]
depths_temp = [1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116, 121, 126, 131, 136, 141, 146, 151, 156, 161, 166, 171, 176, 181, 186, 191, 196, 1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116, 121, 126, 131, 136, 141, 146, 151, 156, 161, 166, 171, 176, 181, 186, 191, 196]
plt.plot(depths_temp, avgs_temp)
plt.xlabels(depths)
